<h2 class="page-header">Webcam</h2>
<p>Welcome</p>
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway"> 
<script>
function allowDrop(ev) {
  ev.preventDefault();
}

function drag(ev) {
  ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
  ev.preventDefault();
  var data = ev.dataTransfer.getData("text");
  ev.target.appendChild(document.getElementById(data));
}
</script>

<div class="w3-content" style="max-width:100%">

<!-- Header -->
<header style="padding:16px">
  <h1 class="w3-xlarge">Camagru</h1>
 
</header>

<!-- Photo Grid -->
<div class="w3-half">
<div class="container-fluid ">
{{#if user}}
  <div >
    <div class="ontop container-fluid" ondrop="drop(event)" ondragover="allowDrop(event)">
    <a href="#" id="start-camera" class="visible"></a>
    <video  id="camera-stream" style="width: 100%"></video>
    <img id="snap">
</div>
    <p id="error-message"></p>
{{else}}
    <div class="controls">
      <a href="#" id="delete-photo" title="Delete Photo" class="disabled"><i class="material-icons">delete</i></a>
      <a href="#" id="take-photo" title="Take Photo"><i class="material-icons">camera_alt</i></a>
      <a href="#" id="download-photo" download="camagru.png" title="Save Photo" class="disabled"><i class="material-icons">file_download</i></a>  
    </div>
    {{/if}}

</head>
<div ></div>
<br>
</div>
</div>
</div>
<div class="w3-half jumbotron">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
 <img id="drag1" src="../../images/dino.gif" draggable="true" ondragstart="drag(event)" width="60px" height="60px">
</div>
<div class="w3-half jumbotron">
<button class="btn btn-light active">  <a href="#" id="take-photo" title="Take Photo"><i class="material-icons">Save Picture</i></a> </button>
<button class="btn btn-light"> <a href="#">Reset</a> </button>
<button class="btn btn-light"> <a href="/">View Gallery</a> </button>

</div>

<canvas></canvas> 

<!-- End Page Content -->
<!-- Footer -->

</body>
<script type="text/javascript">
document.addEventListener('DOMContentLoaded', function () {

    // References to all the element we will need.
    var video = document.querySelector('#camera-stream'),
        image = document.querySelector('#snap'),
        start_camera = document.querySelector('#start-camera'),
        controls = document.querySelector('.controls'),
        take_photo_btn = document.querySelector('#take-photo'),
        delete_photo_btn = document.querySelector('#delete-photo'),
        download_photo_btn = document.querySelector('#download-photo'),
        error_message = document.querySelector('#error-message');


    // The getUserMedia interface is used for handling camera input.
    // Some browsers need a prefix so here we're covering all the options
    navigator.getMedia = ( navigator.getUserMedia ||
    navigator.webkitGetUserMedia ||
    navigator.mozGetUserMedia ||
    navigator.msGetUserMedia);


    if(!navigator.getMedia){
        displayErrorMessage("Your browser doesn't have support for the navigator.getUserMedia interface.");
    }
    else{

        // Request the camera.
        navigator.getMedia(
            {
                video: true
            },
            // Success Callback
            function(stream){

                // Create an object URL for the video stream and
                // set it as src of our HTLM video element.
                video.src = window.URL.createObjectURL(stream);

                // Play the video element to start the stream.
                video.play();
                video.onplay = function() {
                    showVideo();
                };
         
            },
            // Error Callback
            function(err){
                displayErrorMessage("There was an error with accessing the camera stream: " + err.name, err);
            }
        );

    }



    // Mobile browsers cannot play video without user input,
    // so here we're using a button to start it manually.
    start_camera.addEventListener("click", function(e){

        e.preventDefault();

        // Start video playback manually.
        video.play();
        showVideo();

    });


    take_photo_btn.addEventListener("click", function(e){

        e.preventDefault();

        var snap = takeSnapshot();

        // Show image. 
        image.setAttribute('src', snap);
        image.classList.add("visible");

        // Enable delete and save buttons
        delete_photo_btn.classList.remove("disabled");
        download_photo_btn.classList.remove("disabled");

        // Set the href attribute of the download button to the snap url.
        download_photo_btn.href = snap;

        // Pause video playback of stream.
        video.pause();

    });


    delete_photo_btn.addEventListener("click", function(e){

        e.preventDefault();

        // Hide image.
        image.setAttribute('src', "");
        image.classList.remove("visible");

        // Disable delete and save buttons
        delete_photo_btn.classList.add("disabled");
        download_photo_btn.classList.add("disabled");

        // Resume playback of stream.
        video.play();

    });


  
    function showVideo(){
        // Display the video stream and the controls.

        hideUI();
        video.classList.add("visible");
        controls.classList.add("visible");
    }


    function takeSnapshot(){
        // Here we're using a trick that involves a hidden canvas element.  

        var hidden_canvas = document.querySelector('canvas'),
            context = hidden_canvas.getContext('2d');

        var width = video.videoWidth,
            height = video.videoHeight;

        if (width && height) {

            // Setup a canvas with the same dimensions as the video.
            hidden_canvas.width = width;
            hidden_canvas.height = height;

            // Make a copy of the current frame in the video on the canvas.
            context.drawImage(video, 0, 0, width, height);

            // Turn the canvas image into a dataURL that can be used as a src for our photo.
            return hidden_canvas.toDataURL('image/png');
        }
    }


    function displayErrorMessage(error_msg, error){
        error = error || "";
        if(error){
            console.error(error);
        }

        error_message.innerText = error_msg;

        hideUI();
        error_message.classList.add("visible");
    }

   
    function hideUI(){
        // Helper function for clearing the app UI.

        controls.classList.remove("visible");
        start_camera.classList.remove("visible");
        video.classList.remove("visible");
        snap.classList.remove("visible");
        error_message.classList.remove("visible");
    }

});
</script>

          
      </div>
</div>

<script type="script" href="/js/bootstrap.js" ></script>



<div id="uploads">
     <form method="post" action="index.php" enctpe="multipart/form">
        <input type="hidden" name="size" value="1000000">
        <div>
            <input type="file" name="image">
        </div>
        <div>
            <textarea name="text" cols="40" rows="4" placeholder="Say something about this image..."></textarea>
        </div>
        <div>
            <input type="submit" name="upload" value="Upload Image">
        </div>
    </form>
</div>