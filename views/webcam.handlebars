  <div class="card card-body col-md-12">
    <!-- Photo Grid 
  <div class="app">
    <a href="#" id="start-camera" class="visible"></a>
    <video id="camera-stream" style="width: 100%"></video>
    <img id="snap">
    <p id="error-message card card-body"></p>

    <div class="controls">
      <a href="#" id="delete-photo" title="Delete Photo" class="disabled"><i class="material-icons">delete</i></a>
      <a href="#" id="take-photo" title="Take Photo"><i class="material-icons">camera_alt</i></a>
      <a href="#" id="download-photo" download="camagru.png" title="Save Photo" class="disabled"><i class="material-icons">file_download</i></a>  
    </div>
</div>
</div>
</div>

<canvas></canvas> -->
    <style type="text/css">
        .imgStyle
        {
            width:100px;
            height:100px;
            border:3px solid grey;
        }
    </style>
    
      <div class="row">
      <div class="card card-body col-md-9">
 <a href="#" id="test_picture" name="capture" class="visible"></a>
    <video id="test_picture" name="test_picture" style="width: 100% ;border:3px solid grey"></video>
  </div>
 <!--   <img class="col-md-12" id="mainImage" height="500px" width="540x" 
         src="../images/html5.jpg" />-->
         <div class="col-md-3 card card-body ">
     <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
      <img class="imgStyle" src="../images/html5.jpg"/>
       <img class="imgStyle" src="../images/html5.jpg"/>
        <img class="imgStyle" src="../images/html5.jpg"/>
        <br/>
        
        <div class="form">  <input type="submit" value="Take Picture" class="btn btn-primary btn-block">
</div>
      
   </div>

</div>


    <br />

    <div id="divId" onclick="changeImageOnClick(event)">
        <img class="imgStyle" src="../images/html5.jpg"/>
        <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
         <img class="imgStyle" src="../images/html5.jpg"/>
        <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
         <img class="imgStyle" src="../images/html5.jpg"/>
        <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
         <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
         <img class="imgStyle" src="../images/html5.jpg"/>
        <img class="imgStyle" src="../images/image_up-1557929745420.gif"/>
    </div>

   </div>
  
  <div class="card card-body col-md-8">
  
      <div class="col-md-12">
          <form action="/upload" method="POST" enctype="multipart/form-data">
          <div class="custom-file mb-3">
            <input type="file" name="image_up" id="file" class="custom-file-input">
            <label for="file" class="custom-file-label">Choose File</label>
          </div>
          <input type="submit" value="Submit" class="btn btn-primary btn-block">
        </form>
        <hr>
        {{#if files}}
          {{#each files}}
            <div class="card card-body mb-3 mydiv">
               <img src="{{img.src}}" alt="">
              
                      <form method="POST" action="/files/{{file._id }}?_method=DELETE">
                        <button class="btn btn-danger btn-block mt-4">Delete</button>
                      </form>
            </div>
           {{/each}}
              {{else}}
                <p>No files to show</p>
              {{/if}}
      </div>
    </div>
  </div>
  <script type="text/javascript">
var images = document.getElementById("divId").getElementsByTagName("img");

        for (var i = 0; i < images.length; i++) {
            images<i>.onmouseover = function () {
                this.style.cursor = 'hand';
                this.style.borderColor = 'red';
            }
            images<i>.onmouseout = function () {
                this.style.cursor = 'pointer';
                this.style.borderColor = 'grey';
            }
        }
        
        function changeImageOnClick(event) 
        {
            event = event || window.event;
            var targetElement = event.target || event.srcElement;

            if(targetElement.tagName == "IMG")
            {
                document.getElementById("mainImage").src = targetElement.getAttribut("src");
            }
        }


        // create image
 var img = new Image();

 // add src attribute                                   
 img.src = "images/" + filename;

 // when image is loaded, add it to my div
 img.addEventListener("load", function(){
     document.getElementById("mydiv").appendChild(this);
 });

 document.addEventListener('DOMContentLoaded', function () {

    // References to all the element we will need.
    var video = document.querySelector('#camera-stream'),
        image = document.querySelector('#snap'),
        start_camera = document.querySelector('#start-camera'),
        controls = document.querySelector('.controls'),
        take_photo_btn = document.querySelector('#take-photo'),
        delete_photo_btn = document.querySelector('#delete-photo'),
        download_photo_btn = document.querySelector('#download-photo'),
        error_message = document.querySelector('#error-message');


    // The getUserMedia interface is used for handling camera input.
    // Some browsers need a prefix so here we're covering all the options
    navigator.getMedia = ( navigator.getUserMedia ||
    navigator.webkitGetUserMedia ||
    navigator.mozGetUserMedia ||
    navigator.msGetUserMedia);


    if(!navigator.getMedia){
        displayErrorMessage("Your browser doesn't have support for the navigator.getUserMedia interface.");
    }
    else{

        // Request the camera.
        navigator.getMedia(
            {
                video: true
            },
            // Success Callback
            function(stream){

                // Create an object URL for the video stream and
                // set it as src of our HTLM video element.
                video.src = window.URL.createObjectURL(stream);

                // Play the video element to start the stream.
                video.play();
                video.onplay = function() {
                    showVideo();
                };
         
            },
            // Error Callback
            function(err){
                displayErrorMessage("There was an error with accessing the camera stream: " + err.name, err);
            }
        );

    }



    // Mobile browsers cannot play video without user input,
    // so here we're using a button to start it manually.
    start_camera.addEventListener("click", function(e){

        e.preventDefault();

        // Start video playback manually.
        video.play();
        showVideo();

    });


    take_photo_btn.addEventListener("click", function(e){

        e.preventDefault();

        var snap = takeSnapshot();

        // Show image. 
        image.setAttribute('src', snap);
        image.classList.add("visible");

        // Enable delete and save buttons
        delete_photo_btn.classList.remove("disabled");
        download_photo_btn.classList.remove("disabled");

        // Set the href attribute of the download button to the snap url.
        download_photo_btn.href = snap;

        // Pause video playback of stream.
        video.pause();

    });


    delete_photo_btn.addEventListener("click", function(e){

        e.preventDefault();

        // Hide image.
        image.setAttribute('src', "");
        image.classList.remove("visible");

        // Disable delete and save buttons
        delete_photo_btn.classList.add("disabled");
        download_photo_btn.classList.add("disabled");

        // Resume playback of stream.
        video.play();

    });


  
    function showVideo(){
        // Display the video stream and the controls.

        hideUI();
        video.classList.add("visible");
        controls.classList.add("visible");
    }


    function takeSnapshot(){
        // Here we're using a trick that involves a hidden canvas element.  

        var hidden_canvas = document.querySelector('canvas'),
            context = hidden_canvas.getContext('2d');

        var width = video.videoWidth,
            height = video.videoHeight;

        if (width && height) {

            // Setup a canvas with the same dimensions as the video.
            hidden_canvas.width = width;
            hidden_canvas.height = height;

            // Make a copy of the current frame in the video on the canvas.
            context.drawImage(video, 0, 0, width, height);

            // Turn the canvas image into a dataURL that can be used as a src for our photo.
            return hidden_canvas.toDataURL('image/png');
        }
    }


    function displayErrorMessage(error_msg, error){
        error = error || "";
        if(error){
            console.error(error);
        }

        error_message.innerText = error_msg;

        hideUI();
        error_message.classList.add("visible");
    }

   
    function hideUI(){
        // Helper function for clearing the app UI.

        controls.classList.remove("visible");
        start_camera.classList.remove("visible");
        video.classList.remove("visible");
        snap.classList.remove("visible");
        error_message.classList.remove("visible");
    }

});


$(doucument).ready(function()){
    $('#insert').click = $('#image').val();
    if(image_name == '')
    {
        alert("please select image");
            return false;
    }
    else
    {
        var extension = $('#image').val().split('.').pop().toLowerCase();
        if(jQuery.inArray(extension, ['gif','png','jpg','jpeg']) == -1)
        {
            alert('Invalid Image File');
            $('#image').val('');
            return false;
        }
    }
}
</script>

<script type="text/javascript" src="../js/webcam.js"></script>
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
    crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
    crossorigin="anonymous"></script>
</body>

</html>